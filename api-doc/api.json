{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "Vurg Platform",
    "description": "Peer to peer market place for cryptocurrencies"
  },
  "host": "dev-api.vurg.com",
  "basePath": "/api/",
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "User Verification"
    },
    {
      "name": "User Settings"
    },
    {
      "name": "User Profile"
    }
  ],
  "paths":{
    "/login": {
      "post": {
        "operationId": "POST-vurg-customer-login",
        "summary": "User Login API",
        "tags": [
          "Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "dhaval@vurg.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contactus": {
      "post": {
        "operationId": "POST-contactus",
        "summary": "Contact Us form",
        "tags": [
          "Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "dhaval@vurg.com"
                },
                "firstname": {
                  "type": "string",
                  "example": "Dhaval"
                },
                "lastname": {
                  "type": "string",
                  "example": "Prajapati"
                },
                "message": {
                  "type": "string",
                  "example": "Hello There, Lorem Ipsum"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/register": {
      "post": {
        "operationId": "POST-vurg-customer-register",
        "summary": "User registration API",
        "tags": [
          "Authentication"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "dhaval p"
                },
                "email": {
                  "type": "string",
                  "example": "dhaval@vurg.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/email/verify/{id}": {
      "get": {
        "operationId": "POST-vurg-customer-email-verification",
        "summary": "User email verification API",
        "tags": [
          "User Verification"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "verification id",
            "required": true,
            "type": "string",
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/email/resend": {
      "get": {
        "operationId": "POST-vurg-customer-varifcation-email-resend",
        "summary": "Verification email resend",
        "tags": [
          "User Verification"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "id",
            "in": "path",
            "description": "verification id",
            "required": true,
            "type": "string",
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/otp/send": {
      "post": {
        "operationId": "POST-vurg-otp-send",
        "summary": "Send otp on user's mobile API",
        "tags": [
          "User Verification"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "+912547856541"
                },
                "phone_code": {
                  "type": "integer",
                  "example": "1",
                  "description": "Main ID of phonecode"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/otp/verify": {
      "post": {
        "operationId": "POST-vurg-otp-verify",
        "summary": "Verify otp on user's mobile number API",
        "tags": [
          "User Verification"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "+912547856541"
                },
                "code": {
                  "type": "string",
                  "example": "854785"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/upload/avatar": {
      "post": {
        "operationId": "POST-upload-avatar",
        "summary": "Upload User avatar from user settings",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "profile_pic": {
                  "type": "multipart form data",
                  "example": ""
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          },
          "501":{
            "description": "Invalid file format"
          }
        }
      }
    },
    "/remove/avatar": {
      "get": {
        "operationId": "POST-remove-user-avatar",
        "summary": "Remove user avatar",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          },
          "501": {
            "description": "User not found"
          }
        }
      }
    },
    "/username/update": {
      "post": {
        "operationId": "POST-change-username",
        "summary": "Change user name",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "loremipsum"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          },
          "501":{
            "description": "You can only change username one time only"
          }
        }
      }
    },
    "/timezones": {
      "get": {
        "operationId": "GET-Timezone",
        "summary": "Get all timezones",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "operationId": "GET-currencies",
        "summary": "Get all currencies",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/countries": {
      "get": {
        "operationId": "GET-countries",
        "summary": "Get all countries & country code for phone number",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "operationId": "GET-settings",
        "summary": "Get all setting list",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/profile/update": {
      "post": {
        "operationId": "POST-update-user-profile",
        "summary": "Update user profile",
        "tags": [
          "User Settings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "display_name": {
                  "type": "integer",
                  "example": "1",
                  "description": "1:Firstname and initial, 2: Full name, 3: Hide full name"
                },
                "bio": {
                  "type": "text",
                  "example": "I am trader since 2000"
                },
                "preferred_currency": {
                  "type": "interger",
                  "example": "5"
                },
                "user_timezone": {
                  "type": "interger",
                  "example": "2"
                },
                "settings": {
                  "type": "array",
                  "example": "[{setting_id:2,web:1,email:0,other_setting:0}, {setting_id:3,web:0,email:0,other_setting:0}]"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/get/profile": {
      "get": {
        "operationId": "GET-profile",
        "summary": "Get Logged In User profile",
        "tags": [
          "User Profile"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/change/password": {
      "post": {
        "operationId": "POST-change-password",
        "summary": "Change User Password",
        "tags": [
          "User Profile"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "current_password": {
                  "type": "string",
                  "example": "dhaval@123"
                },
                "new_password": {
                  "type": "string",
                  "example": "dhaval@123456"
                },
                "confirm_password": {
                  "type": "string",
                  "example": "dhaval@123456"
                }                
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          },
          "501": {
            "description": "Invalid current password"
          }
        }
      }
    },
    "/offers": {
      "post": {
        "operationId": "POST-fetch-user-offers",
        "summary": "Fetch user's offers",
        "tags": [
          "User Profile"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "offer_type": {
                  "type": "integer",
                  "example": "1",
                  "description": "1:Buy, 2:Sell"
                },
                "currency_type": {
                  "type": "integer",
                  "example": "0",
                  "description": "0:All, 1:Bicoin, 2:Tether,3: Ethereum"
                },
                "per_page": {
                  "type": "integer",
                  "example": "10"
                },
                "page_number": {
                  "type": "integer",
                  "example": "1"
                }                
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/feedback": {
      "post": {
        "operationId": "POST-fetch-user-feedback",
        "summary": "Fetch user's feedback",
        "tags": [
          "User Profile"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "offer_type": {
                  "type": "integer",
                  "example": "1",
                  "description": "1:Buyer, 2:Seller"
                },
                "feedback_type": {
                  "type": "integer",
                  "example": "0",
                  "description": "0:All, 1:Positive, 2:Negative"
                },
                "per_page": {
                  "type": "integer",
                  "example": "10"
                },
                "page_number": {
                  "type": "integer",
                  "example": "1"
                }                
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    
  }
}
